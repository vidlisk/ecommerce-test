{"uid":"1f0088c5a4edbd88","name":"test_excel_cart_add","fullName":"tests.test_cart_case#test_excel_cart_add","historyId":"5256c42637ab073a1f240f0dc3930327","time":{"start":1756864223450,"stop":1756864223520,"duration":70},"status":"failed","statusMessage":"AssertionError: assert np.int64(10000) == 20000","statusTrace":"get_token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX3JvbGUiOjIsInVzZXJfaWQiOjksInVzZXJfbmFtZSI6Imltb29jIiwiZXhwIjoxODQzMjY0MjIzfQ.lejzuACSIQ7NCEXE61N9b7s01V6eFl5_rXoj7_KSjsU'\nget_params = [{'数据格式': 'form', '是否需要登录': np.int64(1), '期望结果': np.int64(10000), '标题': '添加商品到购物车', ...}, {'数据格式': 0, '是否需要登录': np.int...000), '标题': '获取购物车列表', ...}, {'数据格式': 'form', '是否需要登录': np.int64(1), '期望结果': np.int64(10016), '标题': '添加错误商品到购物车', ...}]\n\n    def test_excel_cart_add(get_token,get_params):\n        params = get_params\n        # print(params)\n        jwt_token = get_token\n        for request_data in params:\n            print(request_data)\n            print(\"#\" * 20)\n            case_id = request_data['编号']\n            title = request_data['标题']\n            interface_type = request_data['请求接口类别']\n            uri = request_data['请求地址']\n            method = request_data['请求方式']\n            if_login = request_data['是否需要登录']\n            input_data = request_data['输入数据']\n            data_type = request_data['数据格式']\n            expect = request_data['期望结果']\n            print(f\"用例编号：{case_id}\")\n            print(\"*\" * 20)\n            if if_login == 1:\n                headers = {\n                    \"jwt_token\":jwt_token\n                }\n                if method == \"get\":\n                    response = requests.get(URL+uri,\n                                            input_data,\n                                            headers=headers)\n                    assert 200 == response.status_code\n                    assert expect == json.loads(response.text)['status']\n                elif method == \"post\":\n                    if data_type == \"form\":\n                        response = requests.post(URL+uri,data=input_data,headers=headers)\n                        assert 200 == response.status_code\n>                       assert expect == json.loads(response.text)['status']\nE                       assert np.int64(10000) == 20000\n\ntests\\test_cart_case.py:51: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_login_token","time":{"start":1756864223359,"stop":1756864223441,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_token","time":{"start":1756864223441,"stop":1756864223441,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_params","time":{"start":1756864223441,"stop":1756864223449,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_cart_case"},{"name":"host","value":"LAPTOP-T1K9KCI1"},{"name":"thread","value":"119176-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_cart_case"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"1f0088c5a4edbd88.json","parameterValues":[]}